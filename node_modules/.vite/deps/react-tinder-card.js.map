{
  "version": 3,
  "sources": ["optional-peer-dep:__vite-optional-peer-dep:@react-spring/web:react-tinder-card", "../../react-tinder-card/useWindowSize.js", "../../react-tinder-card/index.js"],
  "sourcesContent": ["throw new Error(`Could not resolve \"@react-spring/web\" imported by \"react-tinder-card\". Is it installed?`)", "const { useState, useEffect } = require('react')\n\n// this hook ensures that window size is only updated on the client and not on the server when using Next.js\nfunction useWindowSize () {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  })\n\n  useEffect(() => {\n    function handleResize () {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    handleResize()\n\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n  return windowSize\n}\n\nmodule.exports = useWindowSize\n", "const React = require('react')\nconst { useSpring, animated } = require('@react-spring/web')\nconst useWindowSize = require('./useWindowSize')\n\nconst settings = {\n  maxTilt: 25, // in deg\n  rotationPower: 50,\n  swipeThreshold: 0.5 // need to update this threshold for RN (1.5 seems reasonable...?)\n}\n\n// physical properties of the spring\nconst physics = {\n  touchResponsive: {\n    friction: 50,\n    tension: 2000\n  },\n  animateOut: {\n    friction: 30,\n    tension: 400\n  },\n  animateBack: {\n    friction: 10,\n    tension: 200\n  }\n}\n\nconst pythagoras = (x, y) => {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\n}\n\nconst normalize = (vector) => {\n  const length = Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2))\n  return { x: vector.x / length, y: vector.y / length }\n}\n\nconst animateOut = async (gesture, setSpringTarget, windowHeight, windowWidth) => {\n  const diagonal = pythagoras(windowHeight, windowWidth)\n  const velocity = pythagoras(gesture.x, gesture.y)\n  const finalX = diagonal * gesture.x\n  const finalY = diagonal * gesture.y\n  const finalRotation = gesture.x * 45\n  const duration = diagonal / velocity\n\n  setSpringTarget.start({\n    xyrot: [finalX, finalY, finalRotation],\n    config: { duration: duration }\n  })\n\n  // for now animate back\n  return await new Promise((resolve) =>\n    setTimeout(() => {\n      resolve()\n    }, duration)\n  )\n}\n\nconst animateBack = (setSpringTarget) => {\n  // translate back to the initial position\n  return new Promise((resolve) => {\n    setSpringTarget.start({ xyrot: [0, 0, 0], config: physics.animateBack, onRest: resolve })\n  })\n}\n\nconst getSwipeDirection = (property) => {\n  if (Math.abs(property.x) > Math.abs(property.y)) {\n    if (property.x > settings.swipeThreshold) {\n      return 'right'\n    } else if (property.x < -settings.swipeThreshold) {\n      return 'left'\n    }\n  } else {\n    if (property.y > settings.swipeThreshold) {\n      return 'down'\n    } else if (property.y < -settings.swipeThreshold) {\n      return 'up'\n    }\n  }\n  return 'none'\n}\n\n// must be created outside of the TinderCard forwardRef\nconst AnimatedDiv = animated.div\n\nconst TinderCard = React.forwardRef(\n  (\n    { flickOnSwipe = true, children, onSwipe, onCardLeftScreen, className, preventSwipe = [], swipeRequirementType = 'velocity', swipeThreshold = settings.swipeThreshold, onSwipeRequirementFulfilled, onSwipeRequirementUnfulfilled },\n    ref\n  ) => {\n    const { width, height } = useWindowSize()\n    const [{ xyrot }, setSpringTarget] = useSpring(() => ({\n      xyrot: [0, 0, 0],\n      config: physics.touchResponsive\n    }))\n\n    settings.swipeThreshold = swipeThreshold\n\n    React.useImperativeHandle(ref, () => ({\n      async swipe (dir = 'right') {\n        if (onSwipe) onSwipe(dir)\n        const power = 1.3\n        const disturbance = (Math.random() - 0.5) / 2\n        if (dir === 'right') {\n          await animateOut({ x: power, y: disturbance }, setSpringTarget, width, height)\n        } else if (dir === 'left') {\n          await animateOut({ x: -power, y: disturbance }, setSpringTarget, width, height)\n        } else if (dir === 'up') {\n          await animateOut({ x: disturbance, y: -power }, setSpringTarget, width, height)\n        } else if (dir === 'down') {\n          await animateOut({ x: disturbance, y: power }, setSpringTarget, width, height)\n        }\n        if (onCardLeftScreen) onCardLeftScreen(dir)\n      },\n      async restoreCard () {\n        await animateBack(setSpringTarget)\n      }\n    }))\n\n    const handleSwipeReleased = React.useCallback(\n      async (setSpringTarget, gesture) => {\n        // Check if this is a swipe\n        const dir = getSwipeDirection({\n          x: swipeRequirementType === 'velocity' ? gesture.vx : gesture.dx,\n          y: swipeRequirementType === 'velocity' ? gesture.vy : gesture.dy\n        })\n\n        if (dir !== 'none') {\n          if (flickOnSwipe) {\n            if (!preventSwipe.includes(dir)) {\n              if (onSwipe) onSwipe(dir)\n\n              await animateOut(swipeRequirementType === 'velocity' ? ({\n                x: gesture.vx,\n                y: gesture.vy\n              }) : (\n                normalize({ x: gesture.dx, y: gesture.dy }) // Normalize to avoid flicking the card away with super fast speed only direction is wanted here\n              ), setSpringTarget, width, height)\n              if (onCardLeftScreen) onCardLeftScreen(dir)\n              return\n            }\n          }\n        }\n\n        // Card was not flicked away, animate back to start\n        animateBack(setSpringTarget)\n      },\n      [swipeRequirementType, flickOnSwipe, preventSwipe, onSwipe, onCardLeftScreen, width, height]\n    )\n\n    let swipeThresholdFulfilledDirection = 'none'\n\n    const gestureStateFromWebEvent = (ev, startPositon, lastPosition, isTouch) => {\n      let dx = isTouch ? ev.touches[0].clientX - startPositon.x : ev.clientX - startPositon.x\n      let dy = isTouch ? ev.touches[0].clientY - startPositon.y : ev.clientY - startPositon.y\n\n      // We cant calculate velocity from the first event\n      if (startPositon.x === 0 && startPositon.y === 0) {\n        dx = 0\n        dy = 0\n      }\n\n      const vx = -(dx - lastPosition.dx) / (lastPosition.timeStamp - Date.now())\n      const vy = -(dy - lastPosition.dy) / (lastPosition.timeStamp - Date.now())\n\n      const gestureState = { dx, dy, vx, vy, timeStamp: Date.now() }\n      return gestureState\n    }\n\n    React.useLayoutEffect(() => {\n      let startPositon = { x: 0, y: 0 }\n      let lastPosition = { dx: 0, dy: 0, vx: 0, vy: 0, timeStamp: Date.now() }\n      let isClicking = false\n\n      const onTouchStart = (ev) => {\n        if (!ev.srcElement.className.includes('pressable') && ev.cancelable) {\n          ev.preventDefault()\n        }\n\n        const gestureState = gestureStateFromWebEvent(ev, startPositon, lastPosition, true)\n        lastPosition = gestureState\n        startPositon = { x: ev.touches[0].clientX, y: ev.touches[0].clientY }\n      }\n\n      element.current.addEventListener(('touchstart'), onTouchStart)\n\n      const onMouseDown = (ev) => {\n        isClicking = true\n        const gestureState = gestureStateFromWebEvent(ev, startPositon, lastPosition, false)\n        lastPosition = gestureState\n        startPositon = { x: ev.clientX, y: ev.clientY }\n      }\n\n      element.current.addEventListener(('mousedown'), onMouseDown)\n\n      const handleMove = (gestureState) => {\n        // Check fulfillment\n        if (onSwipeRequirementFulfilled || onSwipeRequirementUnfulfilled) {\n          const dir = getSwipeDirection({\n            x: swipeRequirementType === 'velocity' ? gestureState.vx : gestureState.dx,\n            y: swipeRequirementType === 'velocity' ? gestureState.vy : gestureState.dy\n          })\n          if (dir !== swipeThresholdFulfilledDirection) {\n            swipeThresholdFulfilledDirection = dir\n            if (swipeThresholdFulfilledDirection === 'none') {\n              if (onSwipeRequirementUnfulfilled) onSwipeRequirementUnfulfilled()\n            } else {\n              if (onSwipeRequirementFulfilled) onSwipeRequirementFulfilled(dir)\n            }\n          }\n        }\n\n        // use guestureState.vx / guestureState.vy for velocity calculations\n        // translate element\n        let rot = gestureState.vx * 15 // Magic number 15 looks about right\n        if (isNaN(rot)) rot = 0\n        rot = Math.max(Math.min(rot, settings.maxTilt), -settings.maxTilt)\n        setSpringTarget.start({ xyrot: [gestureState.dx, gestureState.dy, rot], config: physics.touchResponsive })\n      }\n\n      const onMouseMove = (ev) => {\n        if (!isClicking) return\n        const gestureState = gestureStateFromWebEvent(ev, startPositon, lastPosition, false)\n        lastPosition = gestureState\n        handleMove(gestureState)\n      }\n\n      window.addEventListener(('mousemove'), onMouseMove)\n\n      const onMouseUp = (ev) => {\n        if (!isClicking) return\n        isClicking = false\n        handleSwipeReleased(setSpringTarget, lastPosition)\n        startPositon = { x: 0, y: 0 }\n        lastPosition = { dx: 0, dy: 0, vx: 0, vy: 0, timeStamp: Date.now() }\n      }\n\n      window.addEventListener(('mouseup'), onMouseUp)\n\n      const onTouchMove = (ev) => {\n        const gestureState = gestureStateFromWebEvent(ev, startPositon, lastPosition, true)\n        lastPosition = gestureState\n        handleMove(gestureState)\n      }\n\n      element.current.addEventListener(('touchmove'), onTouchMove)\n\n      const onTouchEnd = (ev) => {\n        handleSwipeReleased(setSpringTarget, lastPosition)\n        startPositon = { x: 0, y: 0 }\n        lastPosition = { dx: 0, dy: 0, vx: 0, vy: 0, timeStamp: Date.now() }\n      }\n\n      element.current.addEventListener(('touchend'), onTouchEnd)\n\n      return () => {\n        element.current.removeEventListener(('touchstart'), onTouchStart)\n        element.current.removeEventListener(('touchmove'), onTouchMove)\n        element.current.removeEventListener(('touchend'), onTouchEnd)\n        window.removeEventListener(('mousemove'), onMouseMove)\n        window.removeEventListener(('mouseup'), onMouseUp)\n        element.current.removeEventListener(('mousedown'), onMouseDown)\n      }\n    }, [handleSwipeReleased, setSpringTarget, onSwipeRequirementFulfilled, onSwipeRequirementUnfulfilled])\n\n    const element = React.useRef()\n\n    return (\n      React.createElement(AnimatedDiv, {\n        ref: element,\n        className,\n        style: {\n          transform: xyrot.to((x, y, rot) => `translate3d(${x}px, ${y}px, ${0}px) rotate(${rot}deg)`)\n        },\n        children\n      })\n    )\n  }\n)\n\nmodule.exports = TinderCard\n"],
  "mappings": "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",
  "names": ["setSpringTarget"]
}
